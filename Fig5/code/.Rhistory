theme(
# axis.title.x = element_blank(),
legend.position = 'empty')
b_metabolism <- read_rds(here('Fig3/subplots/heatkilled_metabolism.rds'))
c_fecundity <- read_rds(here('Fig3/subplots/optimized_fecundity.rds')) +
theme(legend.position = 'empty')
d_fecundity <- read_rds(here('Fig3/subplots/baseline_fecundity.rds')) +
theme(legend.position = 'right')
e_fecundity <- read_rds(here('Fig3/subplots/heatkilled_fecundity.rds'))
f_scheme <- image_read_pdf(here('Fig3/subplots/Fig3f.pdf'))
f <- ggdraw() + draw_image(f_scheme)
b_align <- cowplot::align_plots(c_fecundity, e_fecundity,
align = 'h', axis = 'b')
left <- plot_grid(a_motility, b_align[[1]],
align = 'v', axis = 'lr', rel_heights = c(1, 1.1),
nrow = 2, labels = c('a', 'c'), label_size = 12)
right <- plot_grid(b_metabolism, d_fecundity, b_align[[2]],
align = 'v', axis = 'l',
nrow = 3, labels = c('b', 'd', 'e'), label_size = 12, hjust = 0)
top <- plot_grid(left, right,
rel_widths = c(1.25, 1), ncol = 2)
fig3 <- plot_grid(
top, f, rel_heights = c(2.7, 1), nrow = 2, labels = c('', 'f'), label_size = 12)
save_plot(here('Fig3/Fig3.pdf'),
fig3, base_height = 7, base_width = 7)
save_plot(here('Fig3/Fig3.png'),
fig3, base_height = 7, base_width = 7)
tidy_data <- read_rds(here("Fig4/data/motility_data.rds")) %>%
mutate(total_motility = log10(total_motility))
scores <- read_csv(here("Fig4/data/motility_scores.csv"),
col_names = c("well", "plate", "score")
)
# subtract the background by getting the mean of wormless
background <- tidy_data %>%
filter(is.na(species)) %>%
pull(total_motility) %>%
mean()
tidy_data <- tidy_data %>%
mutate(total_motility = total_motility - background) %>%
mutate(total_motility = case_when(
total_motility < 0 ~ 0,
TRUE ~ total_motility
)) %>%
drop_na(treatment)
init <- tidy_data %>%
filter(time_point == "0hr") %>%
left_join(scores)
ggplot(
init,
aes(
y = total_motility,
fill = as.factor(score),
color = as.factor(score)
)
) +
geom_beeswarm(aes(x = stages))
dead <- init %>%
filter(score == 1) %>%
select(species, stages, well, treatment) %>%
mutate(dead = TRUE)
filtered_data <- tidy_data %>%
left_join(dead) %>%
filter(is.na(dead))
# filter to keep controls for each experiment
self_norm <- filtered_data %>%
filter(time_point == "0hr") %>%
select(well, species, stages, treatment, conc, init_motility = total_motility)
# self-normalize
normalized <- filtered_data %>%
left_join(self_norm) %>%
mutate(self_norm_motility = total_motility / init_motility) %>%
filter(self_norm_motility < 2.5)
(normalized %>%
ggplot(aes(x = time_point, y = total_motility)) +
geom_quasirandom() +
facet_grid(cols = vars(stages)) +
theme_nw2() +
NULL)
primary_hits <- read_csv(here("Fig2/tables/Table1.csv")) %>%
select(number, treatment)
plot_data <- normalized %>%
left_join(primary_hits) %>%
mutate(
species = factor(species,
levels = c("Bpa", "Bma"),
labels = c("*B. pahangi*", "*B. malayi*")
),
stages = factor(stages,
levels = c("AF", "AM"),
labels = c("Adult female", "Adult male")
),
smooth_time_point = case_when(
time_point == "0hr" ~ 0,
time_point == "0.1hr" ~ 1,
time_point == "1hr" ~ 2,
time_point == "24hr" ~ 3,
time_point == "48hr" ~ 4
),
conc = factor(conc,
levels = c("0.1p", "1uM"),
labels = c("0.1%", "1 uM")
),
treatment = str_remove(treatment, " hydrochloride| maleate| citrate"),
number = case_when(
treatment %in% c("Ivermectin", "DMSO") ~ treatment,
!is.na(number) ~ as.character(number),
is.na(number) ~ NA_character_
)
) %>%
drop_na(number)
# get the DMSO means
dmso <- plot_data %>%
filter(treatment == "DMSO", time_point == "0hr") %>%
group_by(stages) %>%
summarise(control_mean = mean(total_motility))
# get the DMSO mean at 48 hr
dmso_end <- plot_data %>%
filter(treatment == "DMSO", time_point == "48hr") %>%
group_by(stages) %>%
summarise(control_mean = mean(total_motility))
# 48 hr bar plot
end_data <- plot_data %>%
ungroup() %>%
# left_join(adult_hits) %>%
left_join(dmso_end) %>%
filter(time_point == "48hr") %>%
mutate(mean_norm = total_motility / control_mean)
end_hits <- end_data %>%
mutate(individual_hit = case_when(
stages == "Adult male" & mean_norm < 0.5 ~ TRUE,
stages == "Adult female" & mean_norm < 0.5 ~ TRUE,
TRUE ~ FALSE
)) %>%
ungroup() %>%
group_by(stages, treatment) %>%
summarise(
treatment_mean = mean(mean_norm),
n_hit = sum(individual_hit),
n = n()
) %>%
mutate(hit = case_when(
treatment %in% c("Ivermectin", "DMSO") ~ treatment,
stages == "Adult male" & (n_hit / n > 0.5) & treatment_mean < 0.6 ~ "Hit",
stages == "Adult female" & (n_hit / n > 0.5) & treatment_mean < 0.4 ~ "Hit",
TRUE ~ "Non-Hit"
))
(end_bar <- end_data %>%
left_join(end_hits) %>%
# hackish way of reordering by group
mutate(reorder = factor(str_c(treatment, stages, sep = "_"))) %>%
mutate(reorder = fct_reorder(reorder, total_motility, mean, .desc = TRUE)) %>%
mutate(reorder = fct_relevel(reorder, "DMSO_Adult female", "DMSO_Adult male", "Ivermectin_Adult female", "Ivermectin_Adult male")) %>%
ggplot(aes(x = reorder, y = mean_norm, color = hit, fill = hit)) +
geom_errorbar(
position = position_dodge(width = 1),
stat = "summary", width = 0.5, alpha = 0.75
) +
geom_bar(position = "dodge", stat = "summary", fun = "mean") +
geom_quasirandom(
shape = 21, fill = "white", size = 1,
alpha = 0.75, dodge.width = 0.9, width = 0.1,
show.legend = FALSE
) +
scale_x_discrete(labels = ~ str_remove(.x, "_.*")) +
scale_y_continuous(labels = scales::percent, expand = expansion(mult = c(0, 0.05))) +
scale_color_manual(
limits = c("Non-Hit", "DMSO", "Ivermectin", "Hit"),
values = c("#273046", "#FAD510", "#CB2314", "#00AFB5")
) +
scale_fill_manual(
limits = c("Non-Hit", "DMSO", "Ivermectin", "Hit"),
values = c("#273046", "#FAD510", "#CB2314", "#00AFB5")
) +
labs(x = "Treatment", y = "48 hr. motility<br>(Percent control)", color = "", fill = "") +
facet_wrap(facets = vars(stages), nrow = 2, scales = "free") +
theme_nw2() +
theme(
panel.grid.major.x = element_blank(),
strip.text.x = element_markdown(face = "italic")
) +
NULL)
# mean motility at each time point
treatment_summary <- plot_data %>%
group_by(smooth_time_point, time_point, stages, treatment) %>%
summarize(mean = mean(total_motility)) %>%
left_join(end_hits)
### distinct lines
(distinct_plot <- plot_data %>%
left_join(end_hits) %>%
filter(treatment %in% filter(end_hits, hit == "Hit")$treatment) %>%
ggplot(aes(x = smooth_time_point, color = hit)) +
geom_point(aes(y = self_norm_motility, shape = stages), size = 1) +
geom_line(aes(y = self_norm_motility, group = interaction(treatment, stages, well)),
alpha = 0.2
) +
stat_summary(
geom = "line", aes(
y = self_norm_motility,
group = interaction(treatment, stages)
),
fun.data = "mean_se", size = 0.5
) +
# geom_hline(yintercept = 0.5) +
geom_richtext(
data = . %>% ungroup() %>% distinct(treatment, hit),
aes(label = str_c("*", treatment, "*")),
x = 2, y = 2, color = "black", size = 3, show.legend = FALSE
) +
scale_x_continuous(labels = c("\u00d8", "0", "1", "24", "48")) +
scale_y_continuous(limits = c(-0.25, 2.25)) +
scale_color_manual(
limits = c("Hit", "Non-Hit"),
values = c("#00AFB5", "#273046"), guide = "none"
) +
facet_wrap(facets = vars(treatment), scales = "free_y", ncol = 2) +
labs(x = "Hours post-treatment", y = "Self-normalized motility", shape = "", color = "") +
theme_nw2() +
theme(
strip.text.x = element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "right"
) +
NULL)
distinct_plot <- lemon::reposition_legend(distinct_plot, "bottom right", panel = "panel-2-7")
### distinct lines
(distinct_plot <- plot_data %>%
left_join(end_hits) %>%
filter(treatment %in% filter(end_hits, hit == "Hit")$treatment) %>%
ggplot(aes(x = smooth_time_point, color = hit)) +
geom_point(aes(y = self_norm_motility, shape = stages), size = 1) +
geom_line(aes(y = self_norm_motility, group = interaction(treatment, stages, well)),
alpha = 0.2
) +
stat_summary(
geom = "line", aes(
y = self_norm_motility,
group = interaction(treatment, stages)
),
fun.data = "mean_se", size = 0.5
) +
# geom_hline(yintercept = 0.5) +
geom_richtext(
data = . %>% ungroup() %>% distinct(treatment, hit),
aes(label = str_c("*", treatment, "*")),
x = 2, y = 2, color = "black", size = 3, show.legend = FALSE
) +
scale_x_continuous(labels = c("\u00d8", "0", "1", "24", "48")) +
scale_y_continuous(limits = c(-0.25, 2.25)) +
scale_color_manual(
limits = c("Hit", "Non-Hit"),
values = c("#00AFB5", "#273046"), guide = "none"
) +
facet_wrap(facets = vars(treatment), scales = "free_y", ncol = 2) +
labs(x = "Hours post-treatment", y = "Self-normalized motility", shape = "", color = "") +
theme_nw2() +
theme(
strip.text.x = element_blank(),
# panel.grid.major.x = element_blank(),
legend.position = "right"
) +
NULL)
distinct_plot <- lemon::reposition_legend(distinct_plot, "bottom right", panel = "panel-2-7")
save_plot(here("Fig4/subplots/Fig4b.pdf"), distinct_plot, base_width = 5, base_height = 6)
save_plot(here("Fig4/subplots/Fig4b.png"), distinct_plot, base_width = 5, base_height = 6)
write_rds(distinct_plot, here("Fig4/subplots/distinct_lines.rds"))
library(tidyverse)
library(ggtext)
library(cowplot)
library(magick)
library(patchwork)
library(here)
# Figure 4 ----------------------------------------------------------------
a_motility <- read_rds(here('Fig4/subplots/motility.rds')) +
theme(
axis.title.x = element_blank(),
legend.position = 'empty'
)
b_distinct_lines <- read_rds(here('Fig4/subplots/distinct_lines.rds'))
c_fecundity <- read_rds(here('Fig4/subplots/proportions.rds')) +
theme(
legend.position = 'empty'
)
c_inset <- read_rds(here('Fig4/subplots/baseline.rds')) +
theme(
axis.text.y =  element_markdown(size = 7),
axis.title.y = element_markdown(size = 9),
# axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'black', size = 0.25),
plot.background = element_rect(fill = NA, colour = NA)
)
c <- c_fecundity +
inset_element(c_inset,
left = 0.75, bottom = 0.5, right = 1, top = 1, align_to = 'full', ignore_tag = TRUE)
d_lactate <- read_rds(here('Fig4/subplots/lactate.rds')) +
theme(
legend.position = 'bottom'
)
e_viability <- image_read_pdf(here('Fig4/subplots/Fig4e.pdf'))
e <- ggdraw() + draw_image(e_viability)
legend <- get_legend(d_lactate)
# cowplot -----------------------------------------------------------------
left <- plot_grid(a_motility, c, d_lactate + theme(legend.position = 'empty'), legend,
nrow = 4, align = 'v', axis = 'l', rel_heights = c(1, 0.5, 1, 0.1),
labels = c('a', 'c', 'd'), label_size = 12)
right <- plot_grid(b_distinct_lines, e,
# scale = c(1, 1.05),
nrow = 2, rel_heights = c(1, 0.5),
# align = 'v', axis = 'lr',
labels = c('b', 'e'), label_size = 12)
fig4 <- plot_grid(left, right,
ncol = 2, rel_widths = c(1, 0.5))
save_plot(here('Fig4/Fig4.pdf'),
fig4, base_width = 8.66, base_height = 11)
save_plot(here('Fig4/Fig4.png'),
fig4, base_width = 8.66, base_height = 11)
library(tidyverse)
library(conflicted)
library(ZamanianLabThemes)
library(tidymodels)
# conflict resolution
conflict_prefer("filter", "dplyr")
model_data <- read_rds(here("Fig3/data/fecundity_model_data.rds")) %>%
filter(!is.na(total), !is.na(pixel_count))
# 10-fold cross-validation
set.seed(123)
split <- initial_split(model_data,
strata = pixel_count
)
train <- training(split)
test <- testing(split)
set.seed(345)
folds <- vfold_cv(train, v = 10)
# make recipe
lm_rec <-
recipe(total ~ ., data = train) %>%
update_role(plate:assay_date, new_role = "ID") %>%
update_role(mf, pretzel, embryo, new_role = "NA") %>%
update_role(pixel_count, new_role = "predictor")
# set the model, engine, and fit
lm_mod <-
linear_reg() %>%
set_engine("lm")
set.seed(234)
lm_fit <-
lm_mod %>%
fit(total ~ pixel_count, data = train)
# generate the worklflow
lm_wf <-
workflow() %>%
add_model(lm_mod) %>%
add_recipe(lm_rec)
# perform the cross-validation
set.seed(456)
lm_fit_rs <-
lm_wf %>%
fit_resamples(folds)
collect_metrics(lm_fit_rs)
# evaluate on the test data
lm_testing_pred <-
augment(lm_fit, test) %>%
mutate(split = "Test") %>%
bind_rows(train %>% mutate(split = "Train"))
lm_testing_pred %>%
rsq(truth = total, .pred)
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = pixel_count, y = .pred)) +
geom_point(aes(x = pixel_count, y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 200000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw() +
theme(legend.position = "right") +
NULL
)
cowplot::save_plot(here("Fig3/supplementary/SupplementaryFig4.pdf", model_performance, base_height = 4, base_asp = 1))
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = pixel_count, y = .pred)) +
geom_point(aes(x = pixel_count, y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 200000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw() +
theme(legend.position = "right") +
NULL
)
cowplot::save_plot(here("Fig3/supplementary/SupplementaryFig4.pdf"), model_performance, base_height = 4, base_asp = 1)
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = pixel_count, y = .pred)) +
geom_point(aes(x = pixel_count, y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 250000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw() +
theme(legend.position = "right") +
NULL
)
cowplot::save_plot(here("Fig3/supplementary/SupplementaryFig4.pdf"), model_performance, base_height = 4, base_asp = 1)
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = pixel_count, y = .pred)) +
geom_point(aes(x = pixel_count, y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 250000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw2() +
theme(legend.position = "right") +
NULL
)
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = pixel_count, y = .pred)) +
geom_point(aes(x = pixel_count, y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 250000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw2() +
theme(legend.position = "right",
axis.text.x = element_markdown(angle = 0, hjust = 0.5)) +
NULL
)
cowplot::save_plot(here("Fig3/supplementary/SupplementaryFig4.pdf"), model_performance, base_height = 4, base_asp = 1)
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = log10(pixel_count), y = .pred)) +
geom_point(aes(x = log10(pixel_count), y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 250000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw2() +
theme(legend.position = "right",
axis.text.x = element_markdown(angle = 0, hjust = 0.5)) +
NULL
)
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = log10(pixel_count), y = .pred)) +
geom_point(aes(x = log10(pixel_count), y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 250000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
# lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw2() +
theme(legend.position = "right",
axis.text.x = element_markdown(angle = 0, hjust = 0.5)) +
NULL
)
(model_performance <- lm_testing_pred %>%
ggplot() +
geom_line(data = . %>% drop_na(.pred), aes(x = pixel_count, y = .pred)) +
geom_point(aes(x = pixel_count, y = total, color = split), alpha = 0.75) +
ggtext::geom_richtext(
data = . %>% rsq(truth = total, .pred),
aes(label = paste0("R<sub>2</sub> = ", round(.estimate, digits = 2))),
x = 250000, y = 1250, color = "white", fill = "black", alpha = 0.75
) +
scale_color_manual(values = wesanderson::wes_palette("Darjeeling1")) +
scale_fill_manual(values = wesanderson::wes_palette("Darjeeling1")) +
lims(x = c(0, 1500000)) +
labs(x = "Pixel Count", y = "Total Progeny", color = "") +
theme_nw2() +
theme(legend.position = "right",
axis.text.x = element_markdown(angle = 0, hjust = 0.5)) +
NULL
)
cowplot::save_plot(here("Fig3/supplementary/SupplementaryFig4.pdf"), model_performance, base_height = 4, base_asp = 1)
