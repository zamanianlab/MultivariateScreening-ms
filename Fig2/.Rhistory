c(0, 0.25, 0.5, 0.75, 1)
))
pc_iqr_v <- diff(pc_stats_v[c(2, 4)])
nc_iqr_v <- diff(nc_stats_v[c(2, 4)])
coef <- 3
pc_outliers_v <- pc_stats_v[2] - coef * pc_iqr_v
nc_outliers_v <- nc_stats_v[4] + coef * nc_iqr_v
(v_distribution <- data %>%
ggplot(aes(x = 1, y = celltox)) +
geom_quasirandom(aes(color = type), alpha = 0.25, size = 3) +
geom_boxplot(
data = . %>% filter(str_detect(type, "Control")),
aes(color = type),
x = 0, position = position_dodge(0)
) +
geom_hline(yintercept = nc_outliers_v, color = "#FAD510", linetype = "dashed") +
geom_hline(yintercept = pc_outliers_v, color = "#CB2314", linetype = "dashed") +
scale_color_manual(values = c("#FAD510", "#CB2314", "#273046")) +
theme_nw2() +
NULL)
pc_stats_m <- as.numeric(quantile(
filter(data, treatment == "Positive Control")$norm_flow,
c(0, 0.25, 0.5, 0.75, 1)
))
nc_stats_m <- as.numeric(quantile(
filter(data, treatment == "Negative Control")$norm_flow,
c(0, 0.25, 0.5, 0.75, 1)
))
pc_iqr_m <- diff(pc_stats_m[c(2, 4)])
nc_iqr_m <- diff(nc_stats_m[c(2, 4)])
pc_outliers_m <- pc_stats_m[4] + coef * pc_iqr_m
nc_outliers_m <- nc_stats_m[2] - coef * nc_iqr_m
(m_distribution <- data %>%
ggplot(aes(x = 1, y = norm_flow)) +
geom_quasirandom(aes(color = type), alpha = 0.25, size = 3) +
geom_boxplot(
data = . %>% filter(str_detect(type, "Control")),
aes(color = type),
x = 0, position = position_dodge(0), coef = 2.5
) +
geom_hline(yintercept = nc_outliers_m, color = "#FAD510", linetype = "dashed") +
geom_hline(yintercept = pc_outliers_m, color = "#CB2314", linetype = "dashed") +
scale_color_manual(values = c("#FAD510", "#CB2314", "#273046")) +
theme_nw2() +
NULL)
# remove 7 outliers in the controls
trimmed <- data %>%
# viability trim
filter(case_when(
type == "Negative Control" & celltox < nc_outliers_v ~ TRUE,
type == "Positive Control" & celltox > pc_outliers_v ~ TRUE,
type == "Treated" & is.numeric(celltox) ~ TRUE
)) %>%
# motility trim
filter(case_when(
type == "Negative Control" & norm_flow > nc_outliers_m ~ TRUE,
type == "Positive Control" & norm_flow < pc_outliers_m ~ TRUE,
type == "Treated" & is.numeric(norm_flow) ~ TRUE
))
# correct for drift and normalize -----------------------------------------
# show the drift in flow
drift <- trimmed %>%
select(assay_date, plate, row, col, well, treatment, type, well_number, optical_flow, norm_flow, celltox) %>%
arrange(well_number) %>%
# filter(str_detect(treatment, 'Control')) %>%
mutate(smooth_row = as.numeric(factor(row))) %>%
filter(!col %in% c("01", "12")) %>%
ggplot(aes(x = smooth_row, y = optical_flow)) +
geom_point(size = 1, alpha = 0.75) +
geom_smooth(method = "lm", color = "indianred") +
scale_x_continuous(labels = c("A", "C", "E", "G"), breaks = seq(1, 8, 2)) +
facet_grid(cols = vars(col)) +
labs(x = "Row", y = "Raw motility") +
theme_nw2() +
theme(legend.position = "empty") +
NULL
c_model <- trimmed %>%
mutate(smooth_row = as.numeric(factor(row))) %>%
mutate(smooth_col = as.numeric(col)) %>%
filter(str_detect(treatment, "Control")) %>%
lm(norm_flow ~ smooth_row + smooth_col, data = .) %>%
tidy()
row_coef <- as.numeric(c_model[2, 2])
col_coef <- as.numeric(c_model[3, 2])
corrected <- trimmed %>%
mutate(smooth_row = as.numeric(factor(row))) %>%
mutate(smooth_col = as.numeric(col)) %>%
mutate(corrected_flow = norm_flow - smooth_row * row_coef - smooth_col * col_coef)
(corrected_drift <- corrected %>%
select(assay_date, plate, row, col, well, treatment, type, well_number, corrected_flow) %>%
arrange(well_number) %>%
mutate(smooth_row = as.numeric(factor(row))) %>%
filter(!col %in% c("01", "12")) %>%
ggplot(aes(x = smooth_row, y = corrected_flow)) +
geom_point(size = 1, alpha = 0.75, color = "#273046") +
geom_smooth(method = "lm", color = "indianred") +
scale_x_continuous(labels = c("A", "C", "E", "G"), breaks = seq(1, 8, 2)) +
facet_grid(cols = vars(col)) +
labs(x = "Row", y = "Corrected motility") +
theme_nw2() +
theme(legend.position = "empty") +
NULL)
(corrected_drift_total <- corrected %>%
ggplot(aes(x = well_number, y = corrected_flow, color = type)) +
geom_point(aes(color = type), alpha = 0.75, size = 1.35) +
scale_color_manual(values = c("#FAD510", "#CB2314", "#273046")) +
scale_x_continuous(limits = c(1, 96), breaks = seq(1, 96, 8)) +
labs(x = "Well number", y = "Regressed motility") +
theme_nw2() +
theme(legend.position = "empty",
axis.text.x = element_markdown(angle = 0, hjust = 0.5)) +
NULL)
write_rds(corrected_drift_total, here("Fig2/subplots/corrected_drift.rds"))
save_plot(here('Fig2/subplots/Fig2d.pdf'), corrected_drift_total,
base_height = 3, base_width = 5)
(correct_dist <- corrected %>%
ggplot() +
geom_histogram(aes(x = corrected_flow, fill = type)) +
scale_fill_manual(values = c("#FAD510", "#CB2314", "#273046")) +
scale_y_continuous(expand = c(0, 0)) +
labs(x = "Normalized, regressed motility", y = "", color = "", fill = "") +
coord_flip() +
theme_nw2() +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.position = "empty"
) +
NULL)
write_rds(correct_dist, here("Fig2/subplots/corrected_dist.rds"))
save_plot(here('Fig2/subplots/Fig2d_inset.pdf'), correct_dist,
base_height = 2, base_width = 2.5)
# rescale -----------------------------------------------------------------
control_summary <- corrected %>%
filter(str_detect(treatment, "Control") == TRUE) %>%
pivot_longer(c(corrected_flow, celltox), names_to = "assay_type", values_to = "value") %>%
group_by(assay_date, plate, assay_type, treatment) %>%
summarise(control_mean = mean(value)) %>%
pivot_wider(names_from = treatment, values_from = control_mean) %>%
rename(n_mean = 4, p_mean = 5)
rescaled <- corrected %>%
pivot_longer(c(corrected_flow, celltox), names_to = "assay_type", values_to = "value") %>%
left_join(., control_summary) %>%
mutate(rescaled = (value - n_mean) / (p_mean - n_mean)) %>%
pivot_wider(id_cols = c(assay_date:conc, strains, type), names_from = assay_type, values_from = rescaled) %>%
rename(motility = corrected_flow, viability = celltox)
write_rds(here('Fig2/data/rescaled_data.rds'))
write_rds(rescaled, here('Fig2/data/rescaled_data.rds'))
rescaled_data <- readRDS(here("Fig2/data/rescaled_data.rds"))
control <- rescaled_data %>%
filter(treatment %in% c("Negative Control", "Positive Control"))
control_summary <- control %>%
select(assay_date, treatment, motility, viability) %>%
pivot_longer(cols = c(motility, viability), values_to = "value", names_to = "assay_type") %>%
# mutate(assay_type = str_remove(assay_type, 'iqm_norm_')) %>%
group_by(assay_date, treatment, assay_type) %>%
summarise(mean = mean(value), sd = sd(value), n = n())
control_summary <- control %>%
select(assay_date, treatment, motility, viability) %>%
pivot_longer(cols = c(motility, viability), values_to = "value", names_to = "assay_type") %>%
group_by(assay_date, treatment, assay_type) %>%
summarise(mean = mean(value), sd = sd(value), n = n())
z_factor <- control_summary %>%
pivot_wider(names_from = treatment, values_from = c(mean, sd, n)) %>%
ungroup() %>%
mutate(
z_factor = 1 - (((3 * `sd_Negative Control`) + (3 * `sd_Positive Control`)) /
abs(`mean_Negative Control` - `mean_Positive Control`)),
x = 1.25,
y = 40
)
(z_factor_p <- control %>%
select(assay_date, treatment, motility, viability) %>%
pivot_longer(cols = c(motility, viability), values_to = "value", names_to = "assay_type") %>%
mutate(assay_type = str_to_sentence(assay_type)) %>%
ggplot() +
geom_rect(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(
xmin = mean - (3 * sd), xmax = mean + (3 * sd),
ymin = -Inf, ymax = Inf, fill = treatment
), alpha = 0.25
) +
geom_histogram(aes(x = value, fill = treatment), alpha = 0.75, bins = 50) +
geom_vline(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(xintercept = mean, color = treatment),
linetype = "dotted", size = 1
) +
geom_text(
data = z_factor %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(x = x, y = y, label = str_c("Z' = ", round(z_factor, digits = 2))),
fontface = "italic", color = "black"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = wes_palette("BottleRocket2")) +
scale_color_manual(values = wes_palette("BottleRocket2")) +
facet_grid(rows = vars(assay_type), scales = "free_x") +
labs(x = "Scaled phenotypic value", y = "Count", fill = "", color = "") +
theme_nc +
NULL)
(z_factor_p <- control %>%
select(assay_date, treatment, motility, viability) %>%
pivot_longer(cols = c(motility, viability), values_to = "value", names_to = "assay_type") %>%
mutate(assay_type = str_to_sentence(assay_type)) %>%
ggplot() +
geom_rect(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(
xmin = mean - (3 * sd), xmax = mean + (3 * sd),
ymin = -Inf, ymax = Inf, fill = treatment
), alpha = 0.25
) +
geom_histogram(aes(x = value, fill = treatment), alpha = 0.75, bins = 50) +
geom_vline(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(xintercept = mean, color = treatment),
linetype = "dotted", size = 1
) +
geom_text(
data = z_factor %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(x = x, y = y, label = str_c("Z' = ", round(z_factor, digits = 2))),
fontface = "italic", color = "black"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = wes_palette("BottleRocket2")) +
scale_color_manual(values = wes_palette("BottleRocket2")) +
facet_grid(rows = vars(assay_type), scales = "free_x") +
labs(x = "Scaled phenotypic value", y = "Count", fill = "", color = "") +
theme_nw2() +
NULL)
(z_factor_p <- control %>%
select(assay_date, treatment, motility, viability) %>%
pivot_longer(cols = c(motility, viability), values_to = "value", names_to = "assay_type") %>%
mutate(assay_type = str_to_sentence(assay_type)) %>%
ggplot() +
geom_rect(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(
xmin = mean - (3 * sd), xmax = mean + (3 * sd),
ymin = -Inf, ymax = Inf, fill = treatment
), alpha = 0.25
) +
geom_histogram(aes(x = value, fill = treatment), alpha = 0.75, bins = 50) +
geom_vline(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(xintercept = mean, color = treatment),
linetype = "dotted", size = 1
) +
geom_text(
data = z_factor %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(x = x, y = y, label = str_c("Z' = ", round(z_factor, digits = 2))),
fontface = "italic", color = "black"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = wes_palette("BottleRocket2")) +
scale_color_manual(values = wes_palette("BottleRocket2")) +
facet_grid(rows = vars(assay_type), scales = "free_x") +
labs(x = "Scaled phenotypic value", y = "Count", fill = "", color = "") +
theme_nw2(
axis.text.x = element_markdown(angle = 0, hjust = 0.5)
) +
NULL)
(z_factor_p <- control %>%
select(assay_date, treatment, motility, viability) %>%
pivot_longer(cols = c(motility, viability), values_to = "value", names_to = "assay_type") %>%
mutate(assay_type = str_to_sentence(assay_type)) %>%
ggplot() +
geom_rect(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(
xmin = mean - (3 * sd), xmax = mean + (3 * sd),
ymin = -Inf, ymax = Inf, fill = treatment
), alpha = 0.25
) +
geom_histogram(aes(x = value, fill = treatment), alpha = 0.75, bins = 50) +
geom_vline(
data = control_summary %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(xintercept = mean, color = treatment),
linetype = "dotted", size = 1
) +
geom_text(
data = z_factor %>% mutate(assay_type = str_to_sentence(assay_type)),
aes(x = x, y = y, label = str_c("Z' = ", round(z_factor, digits = 2))),
fontface = "italic", color = "black"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = wes_palette("BottleRocket2")) +
scale_color_manual(values = wes_palette("BottleRocket2")) +
facet_grid(rows = vars(assay_type), scales = "free_x") +
labs(x = "Scaled phenotypic value", y = "Count", fill = "", color = "") +
theme_nw2() +
theme(axis.text.x = element_markdown(angle = 0, hjust = 0.5)) +
NULL)
save_plot(here("Fig2/subplots/Fig2e.pdf", z_factor_p, base_height = 4, base_width = 6)
save_plot(here("Fig2/subplots/Fig2e.pdf"), z_factor_p, base_height = 4, base_width = 6)
saveRDS(z_factor_p, here("Fig2/subplots/primary_screen_z_factor.rds"))
control_projection <- control %>%
mutate(projection = motility + viability)
projection_summary <- control_projection %>%
select(assay_date, treatment, projection) %>%
group_by(assay_date, treatment) %>%
summarise(mean = mean(projection), sd = sd(projection), n = n())
z_factor_projection <- projection_summary %>%
pivot_wider(names_from = treatment, values_from = c(mean, sd, n)) %>%
ungroup() %>%
mutate(
z_factor = 1 - (((3 * `sd_Negative Control`) + (3 * `sd_Positive Control`)) /
abs(`mean_Negative Control` - `mean_Positive Control`)),
x = 2.25,
y = 20
)
(projection_p <- control_projection %>%
ggplot() +
geom_rect(
data = projection_summary,
aes(
xmin = mean - (3 * sd), xmax = mean + (3 * sd),
ymin = -Inf, ymax = Inf, fill = treatment
), alpha = 0.25
) +
geom_histogram(aes(x = projection, fill = treatment), alpha = 0.75, bins = 50) +
geom_vline(
data = projection_summary,
aes(xintercept = mean, color = treatment),
linetype = "dotted", size = 1
) +
geom_text(
data = z_factor_projection,
aes(x = x, y = y, label = str_c("Z' = ", round(z_factor, digits = 2))),
fontface = "bold", color = "grey25"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = wes_palette("BottleRocket2")) +
scale_color_manual(values = wes_palette("BottleRocket2")) +
labs(x = "Normalized phenotypic value", y = "Count", fill = "", color = "") +
theme_nc +
NULL)
(projection_p <- control_projection %>%
ggplot() +
geom_rect(
data = projection_summary,
aes(
xmin = mean - (3 * sd), xmax = mean + (3 * sd),
ymin = -Inf, ymax = Inf, fill = treatment
), alpha = 0.25
) +
geom_histogram(aes(x = projection, fill = treatment), alpha = 0.75, bins = 50) +
geom_vline(
data = projection_summary,
aes(xintercept = mean, color = treatment),
linetype = "dotted", size = 1
) +
geom_text(
data = z_factor_projection,
aes(x = x, y = y, label = str_c("Z' = ", round(z_factor, digits = 2))),
fontface = "bold", color = "grey25"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = wes_palette("BottleRocket2")) +
scale_color_manual(values = wes_palette("BottleRocket2")) +
labs(x = "Normalized phenotypic value", y = "Count", fill = "", color = "") +
theme_nw2() +
NULL)
projection_p
control_projection <- control %>%
mutate(projection = motility + viability)
projection_summary <- control_projection %>%
select(assay_date, treatment, projection) %>%
group_by(assay_date, treatment) %>%
summarise(mean = mean(projection), sd = sd(projection), n = n())
z_factor_projection <- projection_summary %>%
pivot_wider(names_from = treatment, values_from = c(mean, sd, n)) %>%
ungroup() %>%
mutate(
z_factor = 1 - (((3 * `sd_Negative Control`) + (3 * `sd_Positive Control`)) /
abs(`mean_Negative Control` - `mean_Positive Control`)),
x = 2.25,
y = 20
)
(projection_p <- control_projection %>%
ggplot() +
geom_rect(
data = projection_summary,
aes(
xmin = mean - (3 * sd), xmax = mean + (3 * sd),
ymin = -Inf, ymax = Inf, fill = treatment
), alpha = 0.25
) +
geom_histogram(aes(x = projection, fill = treatment), alpha = 0.75, bins = 50) +
geom_vline(
data = projection_summary,
aes(xintercept = mean, color = treatment),
linetype = "dotted", size = 1
) +
geom_text(
data = z_factor_projection,
aes(x = x, y = y, label = str_c("Z' = ", round(z_factor, digits = 2))),
fontface = "bold", color = "grey25"
) +
scale_y_continuous(expand = c(0, 0)) +
scale_fill_manual(values = wes_palette("BottleRocket2")) +
scale_color_manual(values = wes_palette("BottleRocket2")) +
labs(x = "Normalized phenotypic value", y = "Count", fill = "", color = "") +
theme_nw2() +
NULL)
library(tidyverse)
library(cowplot)
library(magick)
library(conflicted)
library(patchwork)
library(here)
conflict_prefer("area", "patchwork")
# Figure 2 ----------------------------------------------------------------
### A
a_hundred_drift <- read_rds(here('Fig2/subplots/uncorrected_drift_hundred.rds')) +
geom_vline(data = tibble(xintercept = c(1, 17, 33, 49, 65, 81)),
aes(xintercept = xintercept),
linetype = 'dashed',
color = 'grey') +
theme(
axis.title.x = element_blank(),
panel.grid.major.x = element_blank())
a_inset <- read_rds(here('Fig2/subplots/hundred_screen.rds')) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'black'),
plot.background = element_rect(fill = NA, colour = NA))
a <- a_hundred_drift +
inset_element(a_inset,
left = 0.7, bottom = 0.5, right = 1, top = 1, align_to = 'full',
ignore_tag = TRUE)
### B
b_frames <- read_rds(here('Fig2/subplots/frame_optimization.rds'))
### C
c_celltox <- image_read_pdf((here('Fig2/subplots/Fig2c.pdf')))
c_celltox <- ggdraw() + draw_image(c_celltox)  #+ theme(plot.margin = margin(-1, -1, -1, -1, "cm"))
### D
d_corrected <- read_rds(here('Fig2/subplots/corrected_drift.rds')) +
geom_vline(data = tibble(xintercept = c(1, 17, 33, 49, 65, 81)),
aes(xintercept = xintercept),
linetype = 'dashed',
color = 'grey') +
theme(
panel.grid.major.x = element_blank())
d_inset <- read_rds(here('Fig2/subplots/corrected_dist.rds')) +
theme(axis.text.y = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = 'white', colour = 'black'),
plot.background = element_rect(fill = NA, colour = NA))
d <- d_corrected +
inset_element(d_inset,
left = 0.6, bottom = 0.15, right = 0.9, top = 0.65, align_to = 'full',
ignore_tag = TRUE)
### E
e_z_factor <- read_rds(here('Fig2/subplots/primary_screen_z_factor.rds')) +
scale_color_manual(values = c("#FAD510", "#CB2314"), guide = 'none') +
scale_fill_manual(values = c("#FAD510", "#CB2314"), guide = 'none') +
theme(legend.position = 'empty')
### F
f_design <- image_read_pdf((here('Fig2/subplots/Fig2f.pdf')))
f <- ggdraw() + draw_image(f_design)
### G
g_screen <- read_rds(here('Fig2/subplots/primary_screen.rds'))
### H
h_hit_bar <- read_rds(here('Fig2/subplots/hit_bar.rds'))
### I
i_ec <- read_rds(here('Fig2/subplots/ec50_bar.rds'))
abc_layout <- c(
area(t = 1, l = 1, b = 8, r = 12),   # a
area(t = 1, l = 13, b = 3, r = 20),  # b
area(t = 4, l = 13, b = 8, r = 20)   # c
)
abc_patch <-
a +
b_frames +
c_celltox +
plot_layout(design = abc_layout)
de_layout <- c(
area(t = 1, l = 1, b = 4, r = 12),   # d
area(t = 1, l = 13, b = 4, r = 20)   # e
)
de_patch <-
d + e_z_factor +
plot_layout(design = de_layout)
ghi_layout <- c(
area(t = 1, l = 1, b = 4, r = 14),   # a
area(t = 1, l = 15, b = 2, r = 20),  # b
area(t = 3, l = 15, b = 4, r = 20)   # c
)
ghi_patch <-
g_screen +
h_hit_bar +
i_ec +
plot_layout(design = ghi_layout)
fig2 <- abc_patch / de_patch / f / ghi_patch +
plot_layout(heights = c(0.6, 0.6, 1, 1)) +
plot_annotation(tag_levels = 'a') &
theme(
plot.tag = element_text(size = 12, face = 'bold')
)
fig2
save_plot(here('Fig2/Fig2.pdf'),
fig2, base_width = 8.66, base_height = 12)
