),
exp_design = c(
"Drug<br>assay", "Drug<br>assay", "Drug<br>assay",
"Complete<br>media", "Complete<br>media", "RNAi<br>timeline",
"RNAi<br>timeline", "Drug<br>assay", "Drug<br>assay",
"Drug<br>assay", "Drug<br>assay", "Drug<br>assay",
"Drug<br>assay", "RNAi<br>timeline", "Complete<br>media",
"", "Complete<br>media", "RNAi<br>timeline",
"Drug<br>assay", "Drug<br>assay", "Drug<br>assay",
"Drug<br>assay", "Drug<br>assay"
)
)
optimization_data <- data %>%
filter(plate %in% optimization_plates$plate) %>%
left_join(optimization_plates) %>%
mutate(
exp_design = case_when(
exp_design == "" & col %in% c("01", "02", "03", "04", "05", "06") ~ "Complete<br>media",
exp_design == "" & col %in% c("07", "08", "09", "10", "11", "12") ~ "RNAi<br>timeline",
TRUE ~ exp_design
),
treatment = case_when(
treatment %in% c("Water", "Pooled", "Orig") ~ "Daily replacement",
treatment == "New" ~ "QOD replacement"
)
) %>%
arrange(plate, col, well) %>%
group_by(exp_date, exp_design, time_point, species, treatment, conc) %>%
mutate(worm_number = row_number())
media_timeline <- tibble(
exp_design = c(
"Drug<br>assay",
"Complete<br>media",
"RNAi<br>timeline"
),
complete_start = -Inf,
complete_stop = c(0, 120, 48),
incomplete_start = c(0, NA, 48),
incomplete_stop = c(120, NA, 120),
) %>%
filter(exp_design != "RNAi<br>timeline")
(optimization_plot <- optimization_data %>%
mutate(
species = factor(species,
levels = c("Bpa", "Bma"),
labels = c("*B. pahangi*", "*B. malayi*")
),
scaled = case_when(
!exp_date %in% c("20201201", "20210120", "20210126", "20210202", "20210316") & time_point == "120hr" ~ scaled / 2,
TRUE ~ scaled
),
time_point = case_when(
time_point == "0hr" ~ 0,
time_point == "24hr" ~ 24,
time_point == "48hr" ~ 48,
time_point == "72hr" ~ 72,
time_point == "120hr" ~ 120
)
) %>%
# filter out those that aren't releasing at 0hr
group_by(exp_date, exp_design, species, treatment, conc, worm_number) %>%
mutate(
low_fecundity = case_when(
any(time_point == 0 & scaled < 200) ~ TRUE,
TRUE ~ FALSE
)
) %>%
filter(
# low_fecundity == FALSE,
time_point != 96,
exp_design != "RNAi<br>timeline",
treatment != "QOD replacement"
) %>%
ggplot() +
geom_rect(
data = media_timeline, aes(xmin = complete_start, xmax = complete_stop),
ymin = 2750, ymax = 3000, fill = "#E69F00", alpha = 0.9
) +
geom_rect(
data = media_timeline, aes(xmin = incomplete_start, xmax = incomplete_stop),
ymin = 2750, ymax = 3000, fill = "#56B4E9", alpha = 0.9
) +
geom_line(aes(x = time_point, y = scaled, group = interaction(exp_date, worm_number)), alpha = 0.3, size = 0.25) +
# geom_point(aes(x = time_point, y = scaled), alpha = 0.25, size = 0.3) +
geom_smooth(aes(x = as.numeric(time_point), y = scaled), size = 1, se = FALSE, color = "black") +
annotate("segment", x = -Inf, xend = Inf, y = -Inf, yend = -Inf, size = 1) +
annotate("segment", x = -Inf, xend = -Inf, y = -Inf, yend = Inf, size = 1) +
# scale_x_continuous(breaks = c(0, 24, 48, 72, 96, 120)) +
scale_y_continuous(expand = c(0, 0), breaks = c(500, 1500, 2500), limits = c(0, 3000)) +
facet_grid(rows = vars(factor(exp_design, levels = c("Complete<br>media", "RNAi<br>timeline", "Drug<br>assay"))), cols = vars(species)) +
labs(x = "Time point (hr)", y = "Inferred progeny") +
theme_nw2() +
theme(
strip.text.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.x = element_blank(),
axis.text.x = element_markdown(angle = 0, hjust = 0.5)
) +
NULL
)
save_plot(here("Fig3/subplots/Fig3c.pdf"), optimization_plot, base_width = 4, base_height = 4)
(optimization_plot <- optimization_data %>%
mutate(
species = factor(species,
levels = c("Bpa", "Bma"),
labels = c("*B. pahangi*", "*B. malayi*")
),
scaled = case_when(
!exp_date %in% c("20201201", "20210120", "20210126", "20210202", "20210316") & time_point == "120hr" ~ scaled / 2,
TRUE ~ scaled
),
time_point = case_when(
time_point == "0hr" ~ 0,
time_point == "24hr" ~ 24,
time_point == "48hr" ~ 48,
time_point == "72hr" ~ 72,
time_point == "120hr" ~ 120
)
) %>%
# filter out those that aren't releasing at 0hr
group_by(exp_date, exp_design, species, treatment, conc, worm_number) %>%
mutate(
low_fecundity = case_when(
any(time_point == 0 & scaled < 200) ~ TRUE,
TRUE ~ FALSE
)
) %>%
filter(
# low_fecundity == FALSE,
time_point != 96,
exp_design != "RNAi<br>timeline",
treatment != "QOD replacement"
) %>%
ggplot() +
geom_rect(
data = media_timeline, aes(xmin = complete_start, xmax = complete_stop),
ymin = 2750, ymax = 3000, fill = "#E69F00", alpha = 0.9
) +
geom_rect(
data = media_timeline, aes(xmin = incomplete_start, xmax = incomplete_stop),
ymin = 2750, ymax = 3000, fill = "#56B4E9", alpha = 0.9
) +
geom_line(aes(x = time_point, y = scaled, group = interaction(exp_date, worm_number)), alpha = 0.3, size = 0.25) +
# geom_point(aes(x = time_point, y = scaled), alpha = 0.25, size = 0.3) +
geom_smooth(aes(x = as.numeric(time_point), y = scaled), size = 1, se = FALSE, color = "black") +
annotate("segment", x = -Inf, xend = Inf, y = -Inf, yend = -Inf, size = 1) +
annotate("segment", x = -Inf, xend = -Inf, y = -Inf, yend = Inf, size = 1) +
scale_x_continuous(breaks = c(0, 24, 48, 72, 96, 120)) +
scale_y_continuous(expand = c(0, 0), breaks = c(500, 1500, 2500), limits = c(0, 3000)) +
facet_grid(rows = vars(factor(exp_design, levels = c("Complete<br>media", "RNAi<br>timeline", "Drug<br>assay"))), cols = vars(species)) +
labs(x = "Time point (hr)", y = "Inferred progeny") +
theme_nw2() +
theme(
strip.text.y = element_blank(),
panel.grid.major.x = element_blank(),
axis.line.x = element_blank(),
axis.text.x = element_markdown(angle = 0, hjust = 0.5)
) +
NULL
)
save_plot(here("Fig3/subplots/Fig3c.pdf"), optimization_plot, base_width = 4, base_height = 4)
saveRDS(optimization_plot, (here("Fig3/subplots/optimized_fecundity.rds"))
saveRDS(optimization_plot, here("Fig3/subplots/optimized_fecundity.rds"))
(batch <- data %>%
filter(time_point == "0hr", species %in% c("Bpa", "Bma"), as.numeric(exp_date) > 20210101) %>%
mutate(species = factor(species,
levels = c("Bpa", "Bma"),
labels = c("*B. pahangi*", "*B. malayi*")
)) %>%
ggplot(aes(x = scaled, y = exp_date)) +
geom_density_ridges(aes(color = species, fill = species),
alpha = 0.7,
jittered_points = TRUE,
position = position_points_jitter(width = 0.5, height = 0),
point_shape = "|", point_size = 2
) +
scale_x_continuous(expand = c(0, 0)) +
# scale_y_continuous(expand = expansion(add = c(0, .00001))) +
scale_color_manual(values = c('grey', 'black')) +
scale_fill_manual(values = c('grey', 'black')) +
facet_grid(rows = vars(species), scales = "free") +
labs(x = "Inferred progeny", y = "Experiment date", fill = "Species", color = "Species") +
theme_nw2() +
theme(
legend.position = "empty"
) +
NULL
)
save_plot(here("Fig3/subplots/SupplementaryFig2"), batch, base_width = 6, base_height = 6)
save_plot(here("Fig3/subplots/SupplementaryFig2.pdf"), batch, base_width = 6, base_height = 6)
save_plot(here("Fig3/supplementary/SupplementaryFig2.pdf"), batch, base_width = 6, base_height = 6)
# data wrangling/plotting
library(tidyverse)
library(janitor)
# other plotting
library(cowplot)
library(ggtext)
library(ggbeeswarm)
library(ggridges)
library(ZamanianLabThemes)
library(wesanderson)
# misc
library(conflicted)
library(here)
# conflict resolution
conflict_prefer("filter", "dplyr")
data <- read_rds(here("Fig3/data/fecundity_data.rds")) %>%
separate(other, c("time_point", "exp_date"), "_") %>%
# filter for the heat killed data
filter(assay_date == "20210825") %>%
arrange(plate, col, well) %>%
group_by(time_point, species, treatment, conc, exp_date) %>%
mutate(worm_number = row_number()) %>%
ungroup() %>%
mutate(time_point = factor(time_point, levels = c("0hr", "24hr", "48hr"), ordered = TRUE))
(hk_plot <- data %>%
mutate(time_point = factor(time_point,
levels = c("0hr", "24hr", "48hr"),
labels = c("0 hr", "24 hr", "48 hr")
)) %>%
pivot_wider(id_cols = c(exp_date, treatment, worm_number), names_from = time_point, values_from = scaled) %>%
filter(`0 hr` > 200) %>%
mutate(
prop = (`24 hr` + `48 hr`) / `0 hr`,
treatment = case_when(
treatment == "Alive" ~ "Alive",
TRUE ~ "Heat-<br>killed"
)
) %>%
ggplot(aes(x = treatment, y = prop)) +
geom_errorbar(
position = position_dodge(width = 1),
stat = "summary", width = 0.5, alpha = 0.75,
color = "black"
) +
geom_bar(position = "dodge", stat = "summary", fun = "mean", fill = "black") +
geom_quasirandom(
shape = 21, fill = "white", size = 2,
alpha = 0.75, dodge.width = 0.9, width = 0.1,
show.legend = FALSE, color = "black"
) +
scale_y_continuous(labels = scales::percent, expand = expansion(mult = c(0, 0.05))) +
labs(x = "", y = "Inferred progeny<br>(percent 0 hr)", color = "Treatment") +
theme_nw2() +
theme(
panel.grid.major.x = element_blank(),
axis.text.x = element_markdown(angle = 0, hjust = 0.5)
) +
NULL)
save_plot(here("Fig3/subplots/Fig3e.pdf"), hk_plot, base_width = 2)
write_rds(hk_plot, here("Fig3/subplots/heatkilled_fecundity.rds"))
library(tidyverse)
library(cowplot)
library(patchwork)
library(magick)
library(here)
a_motility <- read_rds(here('Fig3/subplots/optimized_motility.rds') +
a_motility <- read_rds(here('Fig3/subplots/optimized_motility.rds')) +
theme(
# axis.title.x = element_blank(),
legend.position = 'empty')
b_metabolism <- read_rds(here('Fig3/subplots/heatkilled_metabolism.rds'))
c_fecundity <- read_rds(here('Fig3/subplots/optimized_fecundity.rds')) +
theme(legend.position = 'empty')
d_fecundity <- read_rds(here('Fig3/subplots/baseline_fecundity.rds')) +
theme(legend.position = 'right')
e_fecundity <- read_rds(here('Fig3/subplots/heatkilled_fecundity.rds'))
f_scheme <- image_read_pdf(here('Fig3/subplots/Fig3f.pdf'))
f <- ggdraw() + draw_image(f_scheme)
b_align <- align_plots(c_fecundity, e_fecundity,
align = 'h', axis = 'b')
b_align <- cowplot::align_plots(c_fecundity, e_fecundity,
align = 'h', axis = 'b')
left <- plot_grid(a_motility, b_align[[1]],
align = 'v', axis = 'lr', rel_heights = c(1, 1.1),
nrow = 2, labels = c('a', 'c'), label_size = 12)
right <- plot_grid(b_metabolism, d_fecundity, b_align[[2]],
align = 'v', axis = 'l',
nrow = 3, labels = c('b', 'd', 'e'), label_size = 12, hjust = 0)
top <- plot_grid(left, right,
rel_widths = c(1.25, 1), ncol = 2)
fig3 <- plot_grid(
top, f, rel_heights = c(2.7, 1), nrow = 2, labels = c('', 'f'), label_size = 12)
fig3
save_plot(here('Fig3/Fig3.pdf'),
fig3, base_height = 7, base_width = 7)
library(tidyverse)
library(ggtext)
library(cowplot)
library(magick)
library(patchwork)
library(here)
here()
# data wrangling/plotting
library(tidyverse)
# other plotting
library(cowplot)
library(ggtext)
library(ZamanianLabThemes)
library(ggbeeswarm)
library(ggrepel)
# stats
library(broom)
# misc
library(conflicted)
library(here)
# conflict resolution
conflict_prefer("filter", "dplyr")
data_dir <- "/Volumes/mzamanian/WormViz/proc"
metadata_dir <- "/Volumes/mzamanian/WormViz/metadata"
d1_plate_number <- str_pad(as.character(seq(1, 36, 1)), 2, "left", 0)
d1_plates <- str_c("20210901-p", d1_plate_number, "-NJW")
d1_paths <- str_c(data_dir, "/", d1_plates, "/", str_c(d1_plates, ".csv"))
d2_plate_number <- str_pad(as.character(seq(1, 12, 1)), 2, "left", 0)
d2_plates <- str_c("20210902-p", d2_plate_number, "-NJW")
d2_paths <- str_c(data_dir, "/", d2_plates, "/", str_c(d2_plates, ".csv"))
d3_plate_number <- str_pad(as.character(seq(1, 12, 1)), 2, "left", 0)
d3_plates <- str_c("20210903-p", d3_plate_number, "-NJW")
d3_paths <- str_c(data_dir, "/", d3_plates, "/", str_c(d3_plates, ".csv"))
# find all the files with the motility data
data_files <- tibble(
base = data_dir,
path = c(d1_paths, d2_paths, d3_paths),
plate = c(d1_plates, d2_plates, d3_plates)
) %>%
mutate(assay_date = str_extract(plate, "20[0-9]{6}")) %>%
select(assay_date, plate, path)
metadata_files <- tibble(
base = metadata_dir,
plate = data_files$plate
) %>%
left_join(., tibble(
plate = sort(rep(c(d1_plates, d2_plates, d3_plates), 6)),
category = rep(c("stages", "strains", "treatment", "conc", "other", "species"), length(c(d1_plates, d2_plates, d3_plates)))
)) %>%
mutate(
path = str_c(base, plate, str_c(category, ".csv"), sep = "/"),
assay_date = str_extract(plate, "20[0-9]{6}")
) %>%
select(path, assay_date, plate, category) %>%
filter(plate %in% data_files$plate)
get_data <- function(...) {
df <- tibble(...)
data <- read_csv(df$path, col_names = TRUE, col_types = "cnnn") %>%
janitor::clean_names() %>%
mutate(
assay_date = df$assay_date,
plate = df$plate
)
}
data <- data_files %>%
pmap_dfr(get_data)
get_metadata <- function(...) {
df <- tibble(...)
data <- read_csv(df$path,
col_names = str_pad(seq(1:6), 2, "left", 0),
col_types = "cccccccccccc"
) %>%
mutate(row = LETTERS[1:4], .before = `01`) %>%
pivot_longer(cols = `01`:`06`, names_to = "col", values_to = df$category) %>%
mutate(well = str_c(row, col), plate = df$plate)
}
collapse_rows <- function(x) {
x <- na.omit(x)
if (length(x) > 0) first(x) else NA
}
metadata <- metadata_files %>%
pmap_dfr(get_metadata) %>%
select(plate, well, row, col, species, stages, strains, treatment, conc, other) %>%
group_by(plate, well, row, col) %>%
summarise(across(species:other, collapse_rows))
tidy_data <- data %>%
left_join(metadata) %>%
rename(time_point = other)
write_rds(here('Fig4/data/motility_data.rds'))
write_rds(tidy_data, here('Fig4/data/motility_data.rds'))
tidy_data <- read_rds("data/raw_motility_data.rds") %>%
mutate(total_motility = log10(total_motility))
tidy_data <- read_rds(here("data/motility_data.rds")) %>%
mutate(total_motility = log10(total_motility))
tidy_data <- read_rds(here("Fig4/data/motility_data.rds")) %>%
mutate(total_motility = log10(total_motility))
# subtract the background by getting the mean of wormless
background <- tidy_data %>%
filter(is.na(species)) %>%
pull(total_motility) %>%
mean()
tidy_data <- tidy_data %>%
mutate(total_motility = total_motility - background) %>%
mutate(total_motility = case_when(
total_motility < 0 ~ 0,
TRUE ~ total_motility
)) %>%
drop_na(treatment)
init <- tidy_data %>%
filter(time_point == "0hr") %>%
left_join(scores)
# get the max and min flow for each stage
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup() %>%
pivot_longer(ceiling:floor, names_to = "measure", values_to = "total_motility") %>%
filter(
(time_point == "0" & measure == "ceiling") |
(time_point == "96" & measure == "floor")
) %>%
select(-time_point) %>%
pivot_wider(names_from = measure, values_from = total_motility)
# filter anything that is less than the floor + 5%
female_cutoff <- as.numeric(range[1, 3]) * 1.05
View(tidy_data)
View(tidy_data)
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup()
View(range)
# get the max and min flow for each stage
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup() %>%
pivot_longer(ceiling:floor, names_to = "measure", values_to = "total_motility") %>%
filter(
(time_point == "0" & measure == "ceiling") |
(time_point == "48" & measure == "floor")
) %>%
select(-time_point) %>%
pivot_wider(names_from = measure, values_from = total_motility)
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup() %>%
pivot_longer(ceiling:floor, names_to = "measure", values_to = "total_motility") %>%
filter(
(time_point == "0" & measure == "ceiling") |
(time_point == "48" & measure == "floor")
)
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup() %>%
pivot_longer(ceiling:floor, names_to = "measure", values_to = "total_motility")
# get the max and min flow for each stage
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup() %>%
pivot_longer(ceiling:floor, names_to = "measure", values_to = "total_motility") %>%
filter(
(time_point == "0hr" & measure == "ceiling") |
(time_point == "48hr" & measure == "floor")
) %>%
select(-time_point) %>%
pivot_wider(names_from = measure, values_from = total_motility)
# filter anything that is less than the floor + 5%
female_cutoff <- as.numeric(range[1, 3]) * 1.05
male_cutoff <- as.numeric(range[2, 3]) * 1.05
View(range)
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup() %>%
pivot_longer(ceiling:floor, names_to = "measure", values_to = "total_motility")
# get the max and min flow for each stage
range <- tidy_data %>%
group_by(time_point, stages) %>%
summarize(ceiling = max(total_motility), floor = min(total_motility)) %>%
ungroup() %>%
pivot_longer(ceiling:floor, names_to = "measure", values_to = "total_motility") %>%
filter(
(time_point == "0hr" & measure == "ceiling") |
(time_point == "48hr" & measure == "floor")
) %>%
select(-time_point) %>%
pivot_wider(names_from = measure, values_from = total_motility)
male_cutoff <- as.numeric(range[2, 3]) + 1 * 1.05
# filter anything that is less than the floor + 5%
female_cutoff <- as.numeric(range[1, 3]) + 1.05
# filter anything that is less than the floor + 5%
female_cutoff <- as.numeric(range[1, 3]) +.05
male_cutoff <- as.numeric(range[2, 3]) + .05
dead <- data %>%
filter(case_when(
time_point == '0' & stages == 'AF' & total_motility < female_cutoff ~ TRUE,
time_point == '0' & stages == 'AM' & total_motility < male_cutoff ~ TRUE,
)) %>%
select(exp_date, species, stages, well) %>%
mutate(dead = TRUE)
dead <- data %>%
filter(case_when(
time_point == '0hr' & stages == 'AF' & total_motility < female_cutoff ~ TRUE,
time_point == '0hr' & stages == 'AM' & total_motility < male_cutoff ~ TRUE,
)) %>%
select(exp_date, species, stages, well) %>%
mutate(dead = TRUE)
dead <- tidy_data %>%
filter(case_when(
time_point == '0hr' & stages == 'AF' & total_motility < female_cutoff ~ TRUE,
time_point == '0hr' & stages == 'AM' & total_motility < male_cutoff ~ TRUE,
)) %>%
select(exp_date, species, stages, well) %>%
mutate(dead = TRUE)
dead <- tidy_data %>%
filter(case_when(
time_point == '0hr' & stages == 'AF' & total_motility < female_cutoff ~ TRUE,
time_point == '0hr' & stages == 'AM' & total_motility < male_cutoff ~ TRUE,
)) %>%
# select(exp_date, species, stages, well) %>%
mutate(dead = TRUE)
View(dead)
